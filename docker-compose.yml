version: "3"

services:
  nginx:
    build: 
      context: ./nginx
      args:
        SERVER_IP: ${SERVER_IP}
        CERTS_: ${CERTS_}
        CERTS_KEY_: ${CERTS_KEY_}
    ports:
      - "80:80"
      - "443:443"
    container_name: nginx_container
    depends_on:
      - game
      - backend
    volumes:
      - ./data/ssl:/etc/nginx/ssl/
      - ./FE:/usr/share/nginx/html/FE
      - profile-image-volume:/usr/share/nginx/profile
    networks:
      - pong_net

  game:
    build: ./GAME
    container_name: game_container
    volumes:
      - ./GAME:/code
    env_file:
      - ./.env
    networks:
      - pong_net

  backend:
    build: ./BE
    container_name: backend_container
    depends_on:
      - postgresql
    volumes:
      - ./BE:/code
      - profile-image-volume:/code/profile
    env_file:
      - ./.env
    environment:
      POSTGRES_HOST: ${POSTGRES_DOCKER_HOST}
      DJANGO_SETTINGS_MODULE: ${BE_DJANGO_SETTINGS_MODULE}
    networks:
      - pong_net

  postgresql:
    image: postgres:alpine
    container_name: db_container
    ports:
      - "5432:5432"
    volumes:
      - db-volume:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
    networks:
      - pong_net

volumes:
  db-volume:
    driver: local
    driver_opts:
      type: none
      device: ${PWD}/data/postgresql
      o: bind
  
  profile-image-volume:
    driver: local
    driver_opts:
      type: none
      device: ${PWD}/data/profile
      o: bind

networks:
  pong_net:
    driver: bridge
